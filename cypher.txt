CREATE CONSTRAINT ON (c:Client) ASSERT c.id IS UNIQUE;
CREATE CONSTRAINT ON (b:Bank) ASSERT b.id IS UNIQUE;
CREATE CONSTRAINT ON (m:Merchant) ASSERT m.id IS UNIQUE;
CREATE CONSTRAINT ON (m:Mule) ASSERT m.id IS UNIQUE;

CREATE CONSTRAINT ON (e:Email) ASSERT e.email IS UNIQUE;
CREATE CONSTRAINT ON (s:SSN) ASSERT s.ssn IS UNIQUE;
CREATE CONSTRAINT ON (p:Phone) ASSERT p.phoneNumber IS UNIQUE;


// import client data
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/clients.csv'
AS row 
MERGE (c:Client {clientID: row.ID})
ON CREATE SET
c.email = row.EMAIL,
c.id= row.ID,
c.isfraud = row.ISFRAUD,
c.name = row.NAME,
c.phoneNumber = row.PHONENUMBER,
c.ssn = row.SSN

// import merchant data
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/merchants.csv'
AS row 
MERGE (m:Merchant {merchantID: row.ID})
ON CREATE SET
m.highrisk = row.HIGHRISK,
m.id = row.ID,
m.name = row.NAME

// import relationships 
// CASH_IN: Client -> Merchant
// CASH_OUT: Client -> Merchant
// PAYMENT: Client -> Merchant
// TRANSFER: Client -> Client or Mule 
// DEBIT: Client -> Bank

// set bank
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.TYPEDEST = "BANK"
MERGE (b:Bank {bankID: row.IDDEST})
ON CREATE SET
b.id = row.IDDEST,
b.name = row.NAMEDEST

// set mule
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.TYPEDEST = "MULE"
MATCH (c:Client {id: row.IDDEST})
SET c:Mule

// unwind email
MATCH (c:Client)
UNWIND c.email AS email
WITH  email, collect(c) AS emails
MERGE (e:Email {email:email})
WITH e, emails
UNWIND emails AS c
WITH e,c
MERGE (c)-[:HAS_EMAIL]->(e);
MATCH (c:Client)
SET c.email = null

// ssn
MATCH (c:Client)
UNWIND c.ssn AS ssn
WITH  ssn, collect(c) AS ssns
MERGE (s:SSN {ssn:ssn})
WITH s, ssns
UNWIND ssns AS c
WITH s,c
MERGE (c)-[:HAS_SSN]->(s);
MATCH (c:Client)
SET c.ssn = null

// phone
MATCH (c:Client)
UNWIND c.phoneNumber AS phoneNumber
WITH  phoneNumber, collect(c) AS phoneNumbers
MERGE (p:Phone {phoneNumber:phoneNumber})
WITH p, phoneNumbers
UNWIND phoneNumbers AS c
WITH p,c
MERGE (c)-[:HAS_PHONE]->(p);
MATCH (c:Client)
SET c.phoneNumber = null

// relationships
// cash in
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.ACTION = "CASH_IN" AND row.TYPEORIG = "CLIENT" AND row.TYPEDEST = "MERCHANT"
MATCH (o:Client {id: row.IDORIG})
MATCH (d:Merchant {id: row.IDDEST})
MERGE (o)-[r:CASH_IN]->(d)
ON CREATE
SET r.amount=toInteger(row.AMOUNT),
r.id=row.GLOBALSTEP,
r.isFraud = row.ISFRAUD,
r.nameDest = row.NAMEDEST,
r.nameOrig = row.NAMEORIG

// cash out
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.ACTION = "CASH_OUT" AND row.TYPEORIG = "CLIENT" AND row.TYPEDEST = "MERCHANT"
MATCH (o:Client {id: row.IDORIG})
MATCH (d:Merchant {id: row.IDDEST})
MERGE (o)-[r:CASH_OUT]->(d)
ON CREATE
SET r.amount=toInteger(row.AMOUNT),
r.id=row.GLOBALSTEP,
r.isFraud = row.ISFRAUD,
r.nameDest = row.NAMEDEST,
r.nameOrig = row.NAMEORIG

// payment
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.ACTION = "PAYMENT" AND row.TYPEORIG = "CLIENT" AND row.TYPEDEST = "MERCHANT"
MATCH (o:Client {id: row.IDORIG})
MATCH (d:Merchant {id: row.IDDEST})
MERGE (o)-[r:PAYMENT]->(d)
ON CREATE
SET r.amount=toInteger(row.AMOUNT),
r.id=row.GLOBALSTEP,
r.isFraud = row.ISFRAUD,
r.nameDest = row.NAMEDEST,
r.nameOrig = row.NAMEORIG

// debit
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.ACTION = "DEBIT" AND row.TYPEORIG = "CLIENT" AND row.TYPEDEST = "BANK"
MATCH (o:Client {id: row.IDORIG})
MATCH (d:Bank {id: row.IDDEST})
MERGE (o)-[r:DEBIT]->(d)
ON CREATE
SET r.amount=toInteger(row.AMOUNT),
r.id=row.GLOBALSTEP,
r.isFraud = row.ISFRAUD,
r.nameDest = row.NAMEDEST,
r.nameOrig = row.NAMEORIG

// transfer client-client
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.ACTION = "TRANSFER" AND row.TYPEORIG = "CLIENT" AND row.TYPEDEST = "CLIENT"
MATCH (o:Client {id: row.IDORIG})
MATCH (d:Client {id: row.IDDEST})
MERGE (o)-[r:TRANSFER]->(d)
ON CREATE
SET r.amount=toInteger(row.AMOUNT),
r.id=row.GLOBALSTEP,
r.isFraud = row.ISFRAUD,
r.nameDest = row.NAMEDEST,
r.nameOrig = row.NAMEORIG

// transfer client-mule
:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS
FROM 'https://raw.githubusercontent.com/18Grace18/ITCS498-Special-Topics_in_Computer_Science/main/transactions.csv'
AS row
WITH row WHERE row.ACTION = "TRANSFER" AND row.TYPEORIG = "CLIENT" AND row.TYPEDEST = "MULE"
MATCH (o:Client {id: row.IDORIG})
MATCH (d:Mule {id: row.IDDEST})
MERGE (o)-[r:TRANSFER]->(d)
ON CREATE
SET r.amount=toInteger(row.AMOUNT),
r.id=row.GLOBALSTEP,
r.isFraud = row.ISFRAUD,
r.nameDest = row.NAMEDEST,
r.nameOrig = row.NAMEORIG

--------------------------------------------------------------------------------------------------------
// relationship query
MATCH (p)-[:HAS_EMAIL]->(m)
RETURN p,m
LIMIT 10